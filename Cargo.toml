[package]
name = "roadiebag"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
anyhow = "1.0.66"
async-trait = { version = "0.1.64", optional = true }
axum = { version = "0.6.4", optional = true, features=["macros"] }
axum_session_auth = { version = "0.7.0", features = [
	"sqlite-rustls",
], optional = true }
axum_session = { version = "0.7.0", features = [
	"sqlite-rustls",
], optional = true }
bcrypt = { version = "0.14", optional = true }
chrono = { version="0.4.31", features=["serde"]}
console_error_panic_hook = "0.1"
console_log = "1"
cfg-if = "1"
futures = "0.3.25"
http = "0.2.8"
leptos = { version = "0.5", features = ["nightly"] }
leptos_axum = { version = "0.5", optional = true }
leptos_meta = { version = "0.5", features = ["nightly"] }
leptos_router = { version = "0.5", features = ["nightly"] }
log = "0.4.17"
rand = { version = "0.8.5", features = ["min_const_gen"], optional = true }
simple_logger = "4"
serde = { version = "1.0.148", features = ["derive"] }
sqlx = { version = "0.7.2", features = [
	"runtime-tokio-rustls",
	"sqlite",
	"time",
	"chrono"
], optional = true }
thiserror = "1.0.38"
tokio = { version = "1.25.0", features = ["full"], optional = true }
tower = { version = "0.4.13", optional = true }
tower-http = { version = "0.4", features = ["fs"], optional = true }
tracing = { version = "0.1.37", optional = true }
wasm-bindgen = "=0.2.87"

dotenvy = { version="0.15.7", optional=true }
sea-query = { version = "0.30.2", features = ["backend-sqlite", "derive", "sea-query-derive"], optional=true }
sea-query-binder = { version = "0.5.0", features = ["sqlx", "serde_json", "with-chrono", "sqlx-sqlite"], optional=true }
strum = { version = "0.25.0", features = ["derive"] }


[features]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = [
	"dep:axum",
	"dep:tower",
	"dep:tower-http",
	"dep:tokio",
	"dep:axum_session_auth",
	"dep:axum_session",
	"dep:async-trait",
	"dep:bcrypt",
	"dep:rand",
	"dep:sqlx",
	"dep:sea-query",
	"dep:dotenvy",
	"dep:sea-query-binder",
	"leptos/ssr",
	"leptos_meta/ssr",
	"leptos_router/ssr",
	"dep:leptos_axum",
]

[package.metadata.cargo-all-features]
denylist = ["axum", "tower", "tower-http", "tokio", "sqlx", "leptos_axum"]
skip_feature_sets = [["ssr", "hydrate"]]

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "roadiebag"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
